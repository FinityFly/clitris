name: Auto Release and Homebrew Update

on:
  pull_request:
    types: [closed]
    branches:
      - main
  workflow_dispatch:
    inputs:
      release-type:
        description: 'Type of release'
        required: true
        type: choice
        default: 'patch'
        options:
          - patch
          - minor
          - major

jobs:
  bump-tag-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Repository checkout
        uses: actions/checkout@v4

      - name: Get tag from PR title or latest tag
        id: get_tag
        run: |
          TITLE="${{ github.event.pull_request.title }}"
          if [[ "$TITLE" =~ (v[0-9]+\.[0-9]+\.[0-9]+) ]]; then
            echo "new_tag=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
          else 
            git fetch --tags
            latest=$(git tag --sort=-v:refname | head -n1)
            if [[ -z "$latest" ]]; then
              latest="v0.0.0"
            fi
            IFS='.' read -r -a parts <<< "${latest#v}"
            if [[ "${{ github.event_name }}" == "pull_request" || "${{ github.event.inputs.release-type }}" == "patch" ]]; then
              major="${parts[0]}"
              minor="${parts[1]}"
              patch="${parts[2]}"
              patch=$((patch + 1))
            elif [[ "${{ github.event.inputs.release-type }}" == "minor" ]]; then
              major="${parts[0]}"
              minor="${parts[1]}"
              minor=$((minor + 1))
              patch=0
            elif [[ "${{ github.event.inputs.release-type }}" == "major" ]]; then
              major=$((parts[0] + 1))
              minor=0
              patch=0
            fi
            new_tag="v$major.$minor.$patch"
            echo "new_tag=$new_tag" >> $GITHUB_OUTPUT
          fi

      - name: Create and push tag
        run: |
          git config user.name "FinityFly"
          git config user.email "daniel1211.lu@gmail.com"
          git tag ${{ steps.get_tag.outputs.new_tag }}
          git push origin ${{ steps.get_tag.outputs.new_tag }}

      - name: Create tarball
        run: |
          mkdir clitris-${{ steps.get_tag.outputs.new_tag }}
          rsync -av --exclude "clitris-${{ steps.get_tag.outputs.new_tag }}" ./ clitris-${{ steps.get_tag.outputs.new_tag }}/
          tar -czf clitris-${{ steps.get_tag.outputs.new_tag }}.tar.gz clitris-${{ steps.get_tag.outputs.new_tag }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_tag.outputs.new_tag }}
          files: clitris-${{ steps.get_tag.outputs.new_tag }}.tar.gz

      - name: Dispatch update to tap
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.HOMEBREW_TAP_TOKEN }}
          repository: FinityFly/homebrew-tap
          event-type: clitris_release
          client-payload: |
            {
              "tarball_url": "https://github.com/FinityFly/clitris/releases/download/${{ steps.get_tag.outputs.new_tag }}/clitris-${{ steps.get_tag.outputs.new_tag }}.tar.gz",
              "version": "${{ steps.get_tag.outputs.new_tag }}"
            }